{"version":3,"sources":["context/NotesDB.ts","context/NotesContext.tsx","pages/Create.tsx","components/DeleteConfirmationDialog.tsx","components/EditNoteDialog.tsx","components/NoNotesBanner.tsx","components/NoteCard.tsx","pages/View.tsx","theme/typography.ts","theme/GlobalTheme.tsx","components/NavBar.tsx","components/SideBar.tsx","components/Layout.tsx","App.tsx","index.tsx"],"names":["notesRepository","databaseName","notes","version","stores","table","Dexie","defaultStore","saveNote","newNote","a","Promise","deleteNote","id","updateNote","updatedNote","NotesContext","React","createContext","NotesProvider","children","useState","setNotes","syncWithDb","toArray","latestNotes","useEffect","open","catch","error","console","message","close","store","add","v4","delete","String","update","Provider","value","useStyles","makeStyles","theme","field","marginBottom","display","submitButton","marginLeft","spacing","Create","classes","history","useHistory","title","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","useContext","noValidate","autoComplete","onSubmit","e","preventDefault","push","Card","CardHeader","CardContent","TextField","className","onChange","target","label","variant","fullWidth","required","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","color","CardActions","Button","type","endIcon","deleteBtn","red","DeleteConfirmationDialog","deleteConfirmation","closeDeleteConfirmation","handleConfirmDelete","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","EditNoteDialog","note","editDialog","closeEditDialog","handleUpdateNote","useTheme","fullScreen","useMediaQuery","breakpoints","down","aria-labelledby","defaultValue","row","useStyle","notesGrid","width","notesColumnGrid","paddingLeft","backgroundClip","divSpaced","noNotesContainer","height","flexDirection","justifyContent","alignItems","contentText","textAlign","NoNotesBanner","Container","Typography","gutterBottom","createStyles","expand","transform","margin","transition","transitions","create","duration","shortest","expandOpen","content","minHeight","avatar","backgroundColor","yellow","green","pink","blue","NoteCard","handleDelete","handleEdit","expanded","setExpanded","Avatar","toUpperCase","action","IconButton","Edit","DeleteOutlined","subheader","component","length","substr","disableSpacing","clsx","prev","aria-expanded","aria-label","ExpandMore","Collapse","in","timeout","unmountOnExit","paragraph","View","setDeleteConfirmation","deletingNoteId","setDeletingNoteId","setEditDialog","editingNote","setEditingNote","breakpointCols","default","1100","700","columnClassName","map","currentNote","find","openEditNote","undefined","typography","htmlFontSize","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","GlobalThemeContext","currentTheme","toggleTheme","GlobalThemeProvider","themeType","setThemeType","localStorageTheme","window","localStorage","getItem","contextValue","nextTheme","setItem","createMuiTheme","palette","ThemeProvider","appBar","zIndex","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","navTitle","easeInOut","menuButton","marginRight","hide","date","NavBar","openSideBar","AppBar","position","elevation","Toolbar","disableGutters","Menu","noWrap","format","Date","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","padding","mixins","paddingRight","active","background","bottomList","marginTop","SideBar","closeSideBar","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","handleClick","callback","Drawer","paper","ChevronLeft","List","item","ListItem","pathname","ListItemIcon","ListItemText","primary","FlashOff","FlashOn","Link","href","rel","GitHub","root","flexGrow","Layout","setOpen","CssBaseline","App","basename","process","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da544bc2.chunk.js","sourcesContent":["import Dexie from \"dexie\";\n\nclass NotesDB extends Dexie {\n  notes: Dexie.Table<INote, string>;\n\n  constructor(databaseName: string) {\n    super(databaseName);\n    this.version(1).stores({\n      notes: \"++id,title,details,category\",\n    });\n\n    this.notes = this.table(\"notes\");\n  }\n}\n\nexport const notesRepository = new NotesDB(\"todoDatabase\");\n","import React, { FC, useEffect, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { notesRepository } from \"./NotesDB\";\n\nconst defaultStore: NotesContextType = {\n  notes: [],\n  saveNote: async (newNote: ICreateNote) => new Promise(() => {}),\n  deleteNote: async (id: string) => new Promise(() => {}),\n  updateNote: async (updatedNote: INote) => new Promise(() => {}),\n};\n\nexport const NotesContext = React.createContext(defaultStore);\n\nexport const NotesProvider: FC = ({ children }): React.ReactElement => {\n  const [notes, setNotes] = useState<INote[]>([]);\n\n  async function syncWithDb() {\n    const latestNotes = await notesRepository.notes.toArray();\n    setNotes(latestNotes);\n  }\n\n  useEffect(() => {\n    notesRepository.open().catch((error: Error) => {\n      console.error(`Open failed: ${error.message}`);\n    });\n    syncWithDb();\n    return () => {\n      notesRepository.close();\n    };\n  }, []);\n\n  const store: NotesContextType = {\n    notes,\n    saveNote: async (newNote: ICreateNote) => {\n      await notesRepository.notes.add({ ...newNote, id: v4() });\n      syncWithDb();\n    },\n    deleteNote: async (id: string) => {\n      await notesRepository.notes.delete(String(id));\n      syncWithDb();\n    },\n    updateNote: async (updatedNote: INote) => {\n      await notesRepository.notes.update(updatedNote.id, updatedNote);\n      syncWithDb();\n    },\n  };\n\n  return (\n    <NotesContext.Provider value={store}>{children}</NotesContext.Provider>\n  );\n};\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { FormEvent, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { NotesContext } from \"../context/NotesContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  field: {\n    marginBottom: 20,\n    display: \"block\",\n  },\n  submitButton: {\n    marginLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport const Create = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState<CategoryType>(\"todo\");\n\n  const { saveNote } = useContext(NotesContext) as NotesContextType;\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n    if (title && details) {\n      saveNote({ title, details, category });\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Card>\n        <CardHeader title=\"Create a Note\" />\n        <CardContent>\n          <TextField\n            className={classes.field}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Note Title\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            error={titleError}\n          />\n          <TextField\n            className={classes.field}\n            onChange={(e) => setDetails(e.target.value)}\n            label=\"Details\"\n            variant=\"outlined\"\n            multiline\n            rows={4}\n            fullWidth\n            required\n            error={detailsError}\n          />\n          <FormControl className={classes.field}>\n            <FormLabel>Note Category</FormLabel>\n            <RadioGroup\n              value={category}\n              onChange={(e) => setCategory(e.target.value as CategoryType)}\n            >\n              <FormControlLabel\n                value=\"personal\"\n                control={<Radio color=\"primary\" />}\n                label=\"Personal\"\n              />\n              <FormControlLabel\n                value=\"todo\"\n                control={<Radio color=\"primary\" />}\n                label=\"Todo\"\n              />\n              <FormControlLabel\n                value=\"reminders\"\n                control={<Radio color=\"primary\" />}\n                label=\"Reminder\"\n              />\n              <FormControlLabel\n                value=\"work\"\n                control={<Radio color=\"primary\" />}\n                label=\"Work\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </CardContent>\n\n        <CardActions>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.submitButton}\n            endIcon={<KeyboardArrowRightIcon />}\n          >\n            Submit\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { red } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React, { FC } from \"react\";\ninterface DeleteConfirmationDialogProps {\n  deleteConfirmation: boolean;\n  closeDeleteConfirmation: () => void;\n  handleConfirmDelete: () => void;\n}\n\nconst useStyles = makeStyles({\n  deleteBtn: {\n    color: red[600],\n  },\n});\n\nexport const DeleteConfirmationDialog: FC<DeleteConfirmationDialogProps> = ({\n  deleteConfirmation,\n  closeDeleteConfirmation,\n  handleConfirmDelete,\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog open={deleteConfirmation} onClose={closeDeleteConfirmation}>\n      <DialogTitle>{\"Delete confirmation\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure want to delete this note?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeDeleteConfirmation} color=\"default\" autoFocus>\n          Cancel\n        </Button>\n        <Button onClick={handleConfirmDelete} className={classes.deleteBtn}>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  makeStyles,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport React, { FC, FormEvent, useState, useEffect } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  field: {\n    marginBottom: 20,\n    display: \"block\",\n  },\n  submitButton: {\n    marginLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\ninterface EditNoteDialogProps {\n  note: INote;\n  editDialog: boolean;\n  closeEditDialog: () => void;\n  handleUpdateNote: (note: INote) => void;\n}\n\nexport const EditNoteDialog: FC<EditNoteDialogProps> = ({\n  note,\n  editDialog,\n  closeEditDialog,\n  handleUpdateNote,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState<CategoryType>(\"todo\");\n\n  useEffect(() => {\n    if (note) {\n      setTitle(note.title);\n      setDetails(note.details);\n      setCategory(note.category);\n    } else {\n      closeEditDialog();\n    }\n  }, [note, closeEditDialog]);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n    if (title && details) {\n      handleUpdateNote({ id: note.id, title, details, category });\n    }\n  };\n\n  return (\n    <Dialog\n      open={editDialog}\n      onClose={closeEditDialog}\n      aria-labelledby=\"form-dialog-title\"\n      fullScreen={fullScreen}\n    >\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <DialogTitle id=\"form-dialog-title\">Edit Note</DialogTitle>\n        <DialogContent>\n          <TextField\n            className={classes.field}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Note Title\"\n            defaultValue={title}\n            variant=\"outlined\"\n            fullWidth\n            required\n            error={titleError}\n          />\n          <TextField\n            className={classes.field}\n            onChange={(e) => setDetails(e.target.value)}\n            label=\"Details\"\n            defaultValue={details}\n            variant=\"outlined\"\n            multiline\n            rows={4}\n            fullWidth\n            required\n            error={detailsError}\n          />\n          <FormControl>\n            <FormLabel>Note Category</FormLabel>\n            <RadioGroup\n              row\n              value={category}\n              onChange={(e) => setCategory(e.target.value as CategoryType)}\n            >\n              <FormControlLabel\n                value=\"personal\"\n                control={<Radio color=\"primary\" />}\n                label=\"Personal\"\n              />\n              <FormControlLabel\n                value=\"todo\"\n                control={<Radio color=\"primary\" />}\n                label=\"Todo\"\n              />\n              <FormControlLabel\n                value=\"reminders\"\n                control={<Radio color=\"primary\" />}\n                label=\"Reminder\"\n              />\n              <FormControlLabel\n                value=\"work\"\n                control={<Radio color=\"primary\" />}\n                label=\"Work\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeEditDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport { Button, Container, makeStyles, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\n\nconst useStyle = makeStyles((theme) => {\n  return {\n    notesGrid: {\n      display: \"flex\",\n      marginLeft: -theme.spacing(2),\n      width: \"auto\",\n    },\n    notesColumnGrid: {\n      paddingLeft: theme.spacing(2),\n      backgroundClip: \"padding-box\",\n    },\n    divSpaced: {\n      marginBottom: theme.spacing(2),\n    },\n    noNotesContainer: {\n      height: \"94vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    contentText: {\n      textAlign: \"center\",\n    },\n  };\n});\nexport const NoNotesBanner = () => {\n  const classes = useStyle();\n\n  const history = useHistory();\n  return (\n    <Container className={classes.noNotesContainer}>\n      <Typography variant=\"h5\" gutterBottom className={classes.contentText}>\n        There is no notes here.\n      </Typography>\n      <Button variant=\"outlined\" onClick={() => history.push(\"/create\")}>\n        Create a new note\n      </Button>\n    </Container>\n  );\n};\n","import {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Collapse,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { blue, green, pink, red, yellow } from \"@material-ui/core/colors\";\nimport { DeleteOutlined, Edit, ExpandMore } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { FC, useState } from \"react\";\n\ninterface NoteCardProps {\n  note: INote;\n  handleDelete: () => void;\n  handleEdit: (id: string) => void;\n}\nconst useStyles = makeStyles<Theme, { category: CategoryType }>(\n  (theme: Theme) =>\n    createStyles({\n      expand: {\n        transform: \"rotate(0deg)\",\n        margin: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      expandOpen: {\n        transform: \"rotate(180deg)\",\n      },\n      content: {\n        minHeight: theme.spacing(2),\n      },\n      deleteBtn: {\n        color: red[400],\n      },\n      avatar: {\n        backgroundColor: ({ category }) => {\n          if (category === \"work\") {\n            return yellow[400];\n          }\n          if (category === \"personal\") {\n            return green[300];\n          }\n          if (category === \"todo\") {\n            return pink[300];\n          }\n          return blue[300];\n        },\n      },\n    })\n);\n\nexport const NoteCard: FC<NoteCardProps> = ({\n  note,\n  handleDelete,\n  handleEdit,\n}) => {\n  const classes = useStyles(note);\n  const [expanded, setExpanded] = useState(false);\n  const SHORT_DETAILS_LENGTH = 30;\n  const handleExpandClick = () => {\n    setExpanded((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            <>\n              <IconButton onClick={() => handleEdit(note.id)}>\n                <Edit />\n              </IconButton>\n              <IconButton\n                className={classes.deleteBtn}\n                onClick={() => handleDelete()}\n              >\n                <DeleteOutlined />\n              </IconButton>\n            </>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        {!expanded && (\n          <CardContent className={classes.content}>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {note.details.length > SHORT_DETAILS_LENGTH\n                ? `${note.details.substr(0, SHORT_DETAILS_LENGTH)}...`\n                : note.details}\n            </Typography>\n          </CardContent>\n        )}\n        {note.details.length > SHORT_DETAILS_LENGTH && (\n          <>\n            <CardActions disableSpacing>\n              <IconButton\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n              >\n                <ExpandMore />\n              </IconButton>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                <Typography paragraph variant=\"body2\">\n                  {note.details}\n                </Typography>\n              </CardContent>\n            </Collapse>\n          </>\n        )}\n      </Card>\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport { DeleteConfirmationDialog } from \"../components/DeleteConfirmationDialog\";\nimport { EditNoteDialog } from \"../components/EditNoteDialog\";\nimport { NoNotesBanner } from \"../components/NoNotesBanner\";\nimport { NoteCard } from \"../components/NoteCard\";\nimport { NotesContext } from \"../context/NotesContext\";\n\nconst useStyle = makeStyles((theme) => {\n  return {\n    notesGrid: {\n      display: \"flex\",\n      marginLeft: -theme.spacing(2),\n      width: \"auto\",\n    },\n    notesColumnGrid: {\n      paddingLeft: theme.spacing(2),\n      backgroundClip: \"padding-box\",\n    },\n    divSpaced: {\n      marginBottom: theme.spacing(2),\n    },\n  };\n});\n\nexport const View = () => {\n  const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n  const [deletingNoteId, setDeletingNoteId] = useState(\"\");\n  const [editDialog, setEditDialog] = useState(false);\n  const [editingNote, setEditingNote] = useState<INote | undefined>();\n\n  const { notes, deleteNote, updateNote } = useContext(\n    NotesContext\n  ) as NotesContextType;\n  const classes = useStyle();\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  };\n\n  const openDeleteConfirmation = (id: string) => {\n    setDeleteConfirmation(true);\n    setDeletingNoteId(id);\n  };\n  const handleConfirmDelete = () => {\n    setDeleteConfirmation(false);\n    deleteNote(deletingNoteId);\n    setDeletingNoteId(\"\");\n  };\n\n  const openEditNote = (id: string) => {\n    const currentNote = notes.find((note) => note.id === id);\n    if (currentNote) {\n      setEditDialog(true);\n      setEditingNote(currentNote);\n    }\n  };\n  const handleUpdateNote = (updatedNote: INote) => {\n    setEditDialog(false);\n    updateNote(updatedNote);\n    setDeletingNoteId(\"\");\n  };\n  const closeEditDialog = () => {\n    setEditingNote(undefined);\n    setEditDialog(false);\n  };\n\n  return (\n    <>\n      {notes.length > 0 ? (\n        <>\n          <Masonry\n            breakpointCols={breakpoints}\n            className={classes.notesGrid}\n            columnClassName={classes.notesColumnGrid}\n          >\n            {notes.map((note) => (\n              <div key={note.id} className={classes.divSpaced}>\n                <NoteCard\n                  note={note}\n                  handleDelete={() => openDeleteConfirmation(note.id)}\n                  handleEdit={(id: string) => openEditNote(id)}\n                />\n              </div>\n            ))}\n          </Masonry>\n          <DeleteConfirmationDialog\n            deleteConfirmation={deleteConfirmation}\n            closeDeleteConfirmation={() => setDeleteConfirmation(false)}\n            handleConfirmDelete={handleConfirmDelete}\n          />\n          <EditNoteDialog\n            editDialog={editDialog}\n            note={editingNote!}\n            closeEditDialog={closeEditDialog}\n            handleUpdateNote={handleUpdateNote}\n          />\n        </>\n      ) : (\n        <NoNotesBanner />\n      )}\n    </>\n  );\n};\n","export const typography = {\n  htmlFontSize: 16,\n  fontFamily: '\"Roboto Mono\", monospace',\n  fontSize: 14,\n  fontWeightLight: 400,\n  fontWeightRegular: 500,\n  fontWeightMedium: 600,\n  fontWeightBold: 700,\n  h1: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h2: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h3: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h4: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h5: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h6: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  subtitle1: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  subtitle2: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  body1: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  body2: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  button: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  caption: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  overline: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n};\n","import { createMuiTheme, PaletteType } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { typography } from \"./typography\";\nimport { createContext, FC, useEffect, useState } from \"react\";\n\nexport type GlobalThemeContextType = {\n  currentTheme: PaletteType;\n  toggleTheme: () => void;\n};\n\nexport const GlobalThemeContext = createContext<GlobalThemeContextType>({\n  currentTheme: \"light\",\n  toggleTheme: () => {},\n});\n\nexport const GlobalThemeProvider: FC = ({ children }) => {\n  const [themeType, setThemeType] = useState<PaletteType>(\"light\");\n\n  useEffect(() => {\n    const localStorageTheme = window.localStorage.getItem(\"globalThemeType\");\n    if (localStorageTheme === \"light\" || localStorageTheme === \"dark\") {\n      setThemeType(localStorageTheme);\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    const nextTheme: PaletteType = themeType === \"dark\" ? \"light\" : \"dark\";\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"globalThemeType\", nextTheme);\n    }\n    setThemeType(nextTheme);\n  };\n\n  const contextValue = {\n    currentTheme: themeType,\n    toggleTheme,\n  };\n\n  const theme = createMuiTheme({\n    palette: { type: themeType },\n    typography,\n  });\n\n  return (\n    <GlobalThemeContext.Provider value={contextValue}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </GlobalThemeContext.Provider>\n  );\n};\n","import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Menu } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { format } from \"date-fns\";\nimport { FC } from \"react\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    navTitle: {\n      transition: theme.transitions.create([\"display\"], {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    menuButton: {\n      marginLeft: 4,\n      marginRight: 30,\n    },\n    hide: {\n      display: \"none\",\n    },\n    date: {\n      marginRight: 24,\n      marginLeft: \"auto\",\n    },\n  })\n);\n\ninterface NavBarProps {\n  openSideBar: () => void;\n  open: boolean;\n}\n\nexport const NavBar: FC<NavBarProps> = ({ open, openSideBar }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      elevation={0}\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: open,\n      })}\n    >\n      <Toolbar disableGutters>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={openSideBar}\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open,\n          })}\n        >\n          <Menu />\n        </IconButton>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          className={clsx(classes.navTitle, {\n            [classes.hide]: open,\n          })}\n        >\n          InMemory Notes\n        </Typography>\n        <Typography className={classes.date}>\n          {format(new Date(), \"do MMMM Y\")}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import {\n  Drawer,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AddCircleOutlineOutlined,\n  ChevronLeft,\n  SubjectOutlined,\n  FlashOff,\n  FlashOn,\n  GitHub,\n} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport React, { FC, useContext } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { GlobalThemeContext } from \"../theme/GlobalTheme\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    title: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    active: {\n      background: theme.palette.background.default,\n    },\n    bottomList: {\n      marginTop: \"auto\",\n    },\n  };\n});\n\ninterface SideBarProps {\n  closeSideBar: () => void;\n  open: boolean;\n}\nexport const SideBar: FC<SideBarProps> = ({ closeSideBar, open }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const { currentTheme, toggleTheme } = useContext(\n    GlobalThemeContext\n  ) as GlobalThemeContextType;\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"primary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"primary\" />,\n      path: \"/create\",\n    },\n  ];\n\n  const handleClick = (callback: () => void) => {\n    closeSideBar();\n    callback();\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <Typography variant=\"h6\" className={classes.title}>\n          InMemory Notes\n        </Typography>\n        <IconButton onClick={closeSideBar}>\n          <ChevronLeft />\n        </IconButton>\n      </div>\n      <List>\n        {menuItems.map((item) => (\n          <ListItem\n            button\n            key={item.text}\n            onClick={() => handleClick(() => history.push(item.path))}\n            className={location.pathname === item.path ? classes.active : \"\"}\n          >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n      </List>\n\n      <List className={classes.bottomList}>\n        <ListItem button onClick={() => handleClick(toggleTheme)}>\n          <ListItemIcon>\n            {currentTheme === \"light\" ? (\n              <FlashOff color=\"primary\" />\n            ) : (\n              <FlashOn color=\"primary\" />\n            )}\n          </ListItemIcon>\n          <ListItemText\n            primary={`Switch to ${currentTheme === \"light\" ? \"Dark\" : \"Light\"}`}\n          />\n        </ListItem>\n        <ListItem button onClick={() => {}}>\n          <Link\n            href=\"https://github.com/deepkush97/inmemory-notes-app-ts\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <ListItemIcon>\n              <GitHub color=\"primary\" />\n            </ListItemIcon>\n          </Link>\n          <ListItemText primary=\"Github Repo\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n","import { CssBaseline } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { FC, useState } from \"react\";\nimport { NavBar } from \"./NavBar\";\nimport { SideBar } from \"./SideBar\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nexport const Layout: FC = ({ children }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <NavBar openSideBar={() => setOpen(true)} open={open} />\n      <SideBar closeSideBar={() => setOpen(false)} open={open} />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Create } from \"./pages/Create\";\nimport { View } from \"./pages/View\";\nimport { GlobalThemeProvider } from \"./theme/GlobalTheme\";\nimport { NotesProvider } from \"./context/NotesContext\";\nimport { Layout } from \"./components/Layout\";\nfunction App() {\n  return (\n    <NotesProvider>\n      <GlobalThemeProvider>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\">\n                <View />\n              </Route>\n              <Route path=\"/create\">\n                <Create />\n              </Route>\n            </Switch>\n          </Layout>\n        </HashRouter>\n      </GlobalThemeProvider>\n    </NotesProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./global.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}