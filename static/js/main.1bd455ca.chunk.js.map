{"version":3,"sources":["context/NotesDB.ts","context/NotesContext.tsx","pages/Create.tsx","components/DeleteConfirmationDialog.tsx","components/NoNotesBanner.tsx","components/NoteCard.tsx","pages/View.tsx","theme/typography.ts","theme/GlobalTheme.tsx","components/NavBar.tsx","components/SideBar.tsx","components/Layout.tsx","App.tsx","index.tsx"],"names":["notesRepository","databaseName","notes","version","stores","table","Dexie","defaultStore","saveNote","newNote","a","Promise","deleteNote","id","NotesContext","React","createContext","NotesProvider","children","useState","setNotes","syncWithDb","toArray","latestNotes","useEffect","open","catch","error","console","message","close","store","add","v4","delete","String","Provider","value","useStyles","makeStyles","theme","field","marginBottom","display","submitButton","marginLeft","spacing","Create","classes","history","useHistory","title","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","useContext","noValidate","autoComplete","onSubmit","e","preventDefault","push","Card","CardHeader","CardContent","TextField","className","onChange","target","label","variant","fullWidth","required","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","color","CardActions","Button","type","endIcon","deleteBtn","red","DeleteConfirmationDialog","deleteConfirmation","closeDeleteConfirmation","handleConfirmDelete","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","useStyle","notesGrid","width","notesColumnGrid","paddingLeft","backgroundClip","divSpaced","noNotesContainer","height","flexDirection","justifyContent","alignItems","contentText","textAlign","NoNotesBanner","Container","Typography","gutterBottom","createStyles","expand","transform","margin","transition","transitions","create","duration","shortest","expandOpen","content","minHeight","avatar","backgroundColor","yellow","green","pink","blue","NoteCard","note","handleDelete","expanded","setExpanded","Avatar","toUpperCase","action","IconButton","DeleteOutlined","subheader","component","length","substr","disableSpacing","clsx","prev","aria-expanded","aria-label","ExpandMore","Collapse","in","timeout","unmountOnExit","paragraph","View","setDeleteConfirmation","deletingNoteId","setDeletingNoteId","breakpointCols","default","1100","700","columnClassName","map","typography","htmlFontSize","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","GlobalThemeContext","currentTheme","toggleTheme","GlobalThemeProvider","themeType","setThemeType","localStorageTheme","window","localStorage","getItem","contextValue","nextTheme","setItem","createMuiTheme","palette","ThemeProvider","appBar","zIndex","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","navTitle","easeInOut","menuButton","marginRight","hide","date","NavBar","openSideBar","AppBar","position","elevation","Toolbar","disableGutters","Menu","noWrap","format","Date","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","padding","mixins","paddingRight","active","background","bottomList","marginTop","SideBar","closeSideBar","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","handleClick","callback","Drawer","paper","ChevronLeft","List","item","ListItem","pathname","ListItemIcon","ListItemText","primary","FlashOff","FlashOn","Link","href","rel","GitHub","root","flexGrow","Layout","setOpen","CssBaseline","App","basename","process","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bd455ca.chunk.js","sourcesContent":["import Dexie from \"dexie\";\n\nclass NotesDB extends Dexie {\n  notes: Dexie.Table<INote, string>;\n\n  constructor(databaseName: string) {\n    super(databaseName);\n    this.version(1).stores({\n      notes: \"++id,title,details,category\",\n    });\n\n    this.notes = this.table(\"notes\");\n  }\n}\n\nexport const notesRepository = new NotesDB(\"todoDatabase\");\n","import React, { FC, useEffect, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { notesRepository } from \"./NotesDB\";\n\nconst defaultStore: NotesContextType = {\n  notes: [],\n  saveNote: async (newNote: ICreateNote) => new Promise(() => {}),\n  deleteNote: async (id: string) => new Promise(() => {}),\n};\n\nexport const NotesContext = React.createContext(defaultStore);\n\nexport const NotesProvider: FC = ({ children }): React.ReactElement => {\n  const [notes, setNotes] = useState<INote[]>([]);\n\n  async function syncWithDb() {\n    const latestNotes = await notesRepository.notes.toArray();\n    setNotes(latestNotes);\n  }\n\n  useEffect(() => {\n    notesRepository.open().catch((error: Error) => {\n      console.error(`Open failed: ${error.message}`);\n    });\n    syncWithDb();\n    return () => {\n      notesRepository.close();\n    };\n  }, []);\n\n  const store: NotesContextType = {\n    notes,\n    saveNote: async (newNote: ICreateNote) => {\n      await notesRepository.notes.add({ ...newNote, id: v4() });\n      syncWithDb();\n    },\n    deleteNote: async (id: string) => {\n      notesRepository.notes.delete(String(id));\n      syncWithDb();\n    },\n  };\n\n  return (\n    <NotesContext.Provider value={store}>{children}</NotesContext.Provider>\n  );\n};\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { FormEvent, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { NotesContext } from \"../context/NotesContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  field: {\n    marginBottom: 20,\n    display: \"block\",\n  },\n  submitButton: {\n    marginLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport const Create = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState<CategoryType>(\"todo\");\n\n  const { saveNote } = useContext(NotesContext) as NotesContextType;\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n    if (title && details) {\n      saveNote({ title, details, category });\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Card>\n        <CardHeader title=\"Create a Note\" />\n        <CardContent>\n          <TextField\n            className={classes.field}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Note Title\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            error={titleError}\n          />\n          <TextField\n            className={classes.field}\n            onChange={(e) => setDetails(e.target.value)}\n            label=\"Details\"\n            variant=\"outlined\"\n            multiline\n            rows={4}\n            fullWidth\n            required\n            error={detailsError}\n          />\n          <FormControl className={classes.field}>\n            <FormLabel>Note Category</FormLabel>\n            <RadioGroup\n              value={category}\n              onChange={(e) => setCategory(e.target.value as CategoryType)}\n            >\n              <FormControlLabel\n                value=\"personal\"\n                control={<Radio color=\"primary\" />}\n                label=\"Personal\"\n              />\n              <FormControlLabel\n                value=\"todo\"\n                control={<Radio color=\"primary\" />}\n                label=\"Todo\"\n              />\n              <FormControlLabel\n                value=\"reminders\"\n                control={<Radio color=\"primary\" />}\n                label=\"Reminder\"\n              />\n              <FormControlLabel\n                value=\"work\"\n                control={<Radio color=\"primary\" />}\n                label=\"Work\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </CardContent>\n\n        <CardActions>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.submitButton}\n            endIcon={<KeyboardArrowRightIcon />}\n          >\n            Submit\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { red } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React, { FC } from \"react\";\ninterface DeleteConfirmationDialogProps {\n  deleteConfirmation: boolean;\n  closeDeleteConfirmation: () => void;\n  handleConfirmDelete: () => void;\n}\n\nconst useStyles = makeStyles({\n  deleteBtn: {\n    color: red[600],\n  },\n});\n\nexport const DeleteConfirmationDialog: FC<DeleteConfirmationDialogProps> = ({\n  deleteConfirmation,\n  closeDeleteConfirmation,\n  handleConfirmDelete,\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog open={deleteConfirmation} onClose={closeDeleteConfirmation}>\n      <DialogTitle>{\"Delete confirmation\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure want to delete this note?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeDeleteConfirmation} color=\"default\" autoFocus>\n          Cancel\n        </Button>\n        <Button onClick={handleConfirmDelete} className={classes.deleteBtn}>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport { Button, Container, makeStyles, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\n\nconst useStyle = makeStyles((theme) => {\n  return {\n    notesGrid: {\n      display: \"flex\",\n      marginLeft: -theme.spacing(2),\n      width: \"auto\",\n    },\n    notesColumnGrid: {\n      paddingLeft: theme.spacing(2),\n      backgroundClip: \"padding-box\",\n    },\n    divSpaced: {\n      marginBottom: theme.spacing(2),\n    },\n    noNotesContainer: {\n      height: \"94vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    contentText: {\n      textAlign: \"center\",\n    },\n  };\n});\nexport const NoNotesBanner = () => {\n  const classes = useStyle();\n\n  const history = useHistory();\n  return (\n    <Container className={classes.noNotesContainer}>\n      <Typography variant=\"h5\" gutterBottom className={classes.contentText}>\n        There is no notes here.\n      </Typography>\n      <Button variant=\"outlined\" onClick={() => history.push(\"/create\")}>\n        Create a new note\n      </Button>\n    </Container>\n  );\n};\n","import {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Collapse,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { blue, green, pink, red, yellow } from \"@material-ui/core/colors\";\nimport { DeleteOutlined, ExpandMore } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { FC, useState } from \"react\";\n\ninterface NoteCardProps {\n  note: INote;\n  handleDelete: () => void;\n}\nconst useStyles = makeStyles<Theme, { category: CategoryType }>(\n  (theme: Theme) =>\n    createStyles({\n      expand: {\n        transform: \"rotate(0deg)\",\n        margin: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      expandOpen: {\n        transform: \"rotate(180deg)\",\n      },\n      content: {\n        minHeight: theme.spacing(2),\n      },\n      deleteBtn: {\n        color: red[400],\n      },\n      avatar: {\n        backgroundColor: ({ category }) => {\n          if (category === \"work\") {\n            return yellow[400];\n          }\n          if (category === \"personal\") {\n            return green[300];\n          }\n          if (category === \"todo\") {\n            return pink[300];\n          }\n          return blue[300];\n        },\n      },\n    })\n);\n\nexport const NoteCard: FC<NoteCardProps> = ({ note, handleDelete }) => {\n  const classes = useStyles(note);\n  const [expanded, setExpanded] = useState(false);\n  const SHORT_DETAILS_LENGTH = 30;\n  const handleExpandClick = () => {\n    setExpanded((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            <IconButton\n              className={classes.deleteBtn}\n              onClick={() => handleDelete()}\n            >\n              <DeleteOutlined />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        {!expanded && (\n          <CardContent className={classes.content}>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {note.details.length > SHORT_DETAILS_LENGTH\n                ? `${note.details.substr(0, SHORT_DETAILS_LENGTH)}...`\n                : note.details}\n            </Typography>\n          </CardContent>\n        )}\n        {note.details.length > SHORT_DETAILS_LENGTH && (\n          <>\n            <CardActions disableSpacing>\n              <IconButton\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n              >\n                <ExpandMore />\n              </IconButton>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                <Typography paragraph variant=\"body2\">\n                  {note.details}\n                </Typography>\n              </CardContent>\n            </Collapse>\n          </>\n        )}\n      </Card>\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport { DeleteConfirmationDialog } from \"../components/DeleteConfirmationDialog\";\nimport { NoNotesBanner } from \"../components/NoNotesBanner\";\nimport { NoteCard } from \"../components/NoteCard\";\nimport { NotesContext } from \"../context/NotesContext\";\n\nconst useStyle = makeStyles((theme) => {\n  return {\n    notesGrid: {\n      display: \"flex\",\n      marginLeft: -theme.spacing(2),\n      width: \"auto\",\n    },\n    notesColumnGrid: {\n      paddingLeft: theme.spacing(2),\n      backgroundClip: \"padding-box\",\n    },\n    divSpaced: {\n      marginBottom: theme.spacing(2),\n    },\n  };\n});\n\nexport const View = () => {\n  const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n  const [deletingNoteId, setDeletingNoteId] = useState(\"\");\n\n  const { notes, deleteNote } = useContext(NotesContext) as NotesContextType;\n  const classes = useStyle();\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  };\n\n  const openDeleteConfirmation = (id: string) => {\n    setDeleteConfirmation(true);\n    setDeletingNoteId(id);\n  };\n  const handleConfirmDelete = () => {\n    setDeleteConfirmation(false);\n    deleteNote(deletingNoteId);\n    setDeletingNoteId(\"\");\n  };\n\n  return (\n    <>\n      {notes.length > 0 ? (\n        <>\n          <Masonry\n            breakpointCols={breakpoints}\n            className={classes.notesGrid}\n            columnClassName={classes.notesColumnGrid}\n          >\n            {notes.map((note) => (\n              <div key={note.id} className={classes.divSpaced}>\n                <NoteCard\n                  note={note}\n                  handleDelete={() => openDeleteConfirmation(note.id)}\n                />\n              </div>\n            ))}\n          </Masonry>\n          <DeleteConfirmationDialog\n            deleteConfirmation={deleteConfirmation}\n            closeDeleteConfirmation={() => setDeleteConfirmation(false)}\n            handleConfirmDelete={handleConfirmDelete}\n          />\n        </>\n      ) : (\n        <NoNotesBanner />\n      )}\n    </>\n  );\n};\n","export const typography = {\n  htmlFontSize: 16,\n  fontFamily: '\"Roboto Mono\", monospace',\n  fontSize: 14,\n  fontWeightLight: 400,\n  fontWeightRegular: 500,\n  fontWeightMedium: 600,\n  fontWeightBold: 700,\n  h1: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h2: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h3: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h4: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h5: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  h6: {\n    fontFamily: '\"Roboto Slab\", serif',\n  },\n  subtitle1: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  subtitle2: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  body1: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  body2: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  button: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  caption: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n  overline: {\n    fontFamily: '\"Roboto Mono\", monospace',\n  },\n};\n","import { createMuiTheme, PaletteType } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { typography } from \"./typography\";\nimport { createContext, FC, useEffect, useState } from \"react\";\n\nexport type GlobalThemeContextType = {\n  currentTheme: PaletteType;\n  toggleTheme: () => void;\n};\n\nexport const GlobalThemeContext = createContext<GlobalThemeContextType>({\n  currentTheme: \"light\",\n  toggleTheme: () => {},\n});\n\nexport const GlobalThemeProvider: FC = ({ children }) => {\n  const [themeType, setThemeType] = useState<PaletteType>(\"light\");\n\n  useEffect(() => {\n    const localStorageTheme = window.localStorage.getItem(\"globalThemeType\");\n    if (localStorageTheme === \"light\" || localStorageTheme === \"dark\") {\n      setThemeType(localStorageTheme);\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    const nextTheme: PaletteType = themeType === \"dark\" ? \"light\" : \"dark\";\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"globalThemeType\", nextTheme);\n    }\n    setThemeType(nextTheme);\n  };\n\n  const contextValue = {\n    currentTheme: themeType,\n    toggleTheme,\n  };\n\n  const theme = createMuiTheme({\n    palette: { type: themeType },\n    typography,\n  });\n\n  return (\n    <GlobalThemeContext.Provider value={contextValue}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </GlobalThemeContext.Provider>\n  );\n};\n","import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Menu } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { format } from \"date-fns\";\nimport { FC } from \"react\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    navTitle: {\n      transition: theme.transitions.create([\"display\"], {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    menuButton: {\n      marginLeft: 4,\n      marginRight: 30,\n    },\n    hide: {\n      display: \"none\",\n    },\n    date: {\n      marginRight: 24,\n      marginLeft: \"auto\",\n    },\n  })\n);\n\ninterface NavBarProps {\n  openSideBar: () => void;\n  open: boolean;\n}\n\nexport const NavBar: FC<NavBarProps> = ({ open, openSideBar }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      elevation={0}\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: open,\n      })}\n    >\n      <Toolbar disableGutters>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={openSideBar}\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open,\n          })}\n        >\n          <Menu />\n        </IconButton>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          className={clsx(classes.navTitle, {\n            [classes.hide]: open,\n          })}\n        >\n          InMemory Notes\n        </Typography>\n        <Typography className={classes.date}>\n          {format(new Date(), \"do MMMM Y\")}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import {\n  Drawer,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AddCircleOutlineOutlined,\n  ChevronLeft,\n  SubjectOutlined,\n  FlashOff,\n  FlashOn,\n  GitHub,\n} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport React, { FC, useContext } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { GlobalThemeContext } from \"../theme/GlobalTheme\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    title: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    active: {\n      background: theme.palette.background.default,\n    },\n    bottomList: {\n      marginTop: \"auto\",\n    },\n  };\n});\n\ninterface SideBarProps {\n  closeSideBar: () => void;\n  open: boolean;\n}\nexport const SideBar: FC<SideBarProps> = ({ closeSideBar, open }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const { currentTheme, toggleTheme } = useContext(\n    GlobalThemeContext\n  ) as GlobalThemeContextType;\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"primary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"primary\" />,\n      path: \"/create\",\n    },\n  ];\n\n  const handleClick = (callback: () => void) => {\n    closeSideBar();\n    callback();\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <Typography variant=\"h6\" className={classes.title}>\n          InMemory Notes\n        </Typography>\n        <IconButton onClick={closeSideBar}>\n          <ChevronLeft />\n        </IconButton>\n      </div>\n      <List>\n        {menuItems.map((item) => (\n          <ListItem\n            button\n            key={item.text}\n            onClick={() => handleClick(() => history.push(item.path))}\n            className={location.pathname === item.path ? classes.active : \"\"}\n          >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n      </List>\n\n      <List className={classes.bottomList}>\n        <ListItem button onClick={() => handleClick(toggleTheme)}>\n          <ListItemIcon>\n            {currentTheme === \"light\" ? (\n              <FlashOff color=\"primary\" />\n            ) : (\n              <FlashOn color=\"primary\" />\n            )}\n          </ListItemIcon>\n          <ListItemText\n            primary={`Switch to ${currentTheme === \"light\" ? \"Dark\" : \"Light\"}`}\n          />\n        </ListItem>\n        <ListItem button onClick={() => {}}>\n          <Link\n            href=\"https://github.com/deepkush97/inmemory-notes-app-ts\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <ListItemIcon>\n              <GitHub color=\"primary\" />\n            </ListItemIcon>\n          </Link>\n          <ListItemText primary=\"Github Repo\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n","import { CssBaseline } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { FC, useState } from \"react\";\nimport { NavBar } from \"./NavBar\";\nimport { SideBar } from \"./SideBar\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nexport const Layout: FC = ({ children }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <NavBar openSideBar={() => setOpen(true)} open={open} />\n      <SideBar closeSideBar={() => setOpen(false)} open={open} />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Create } from \"./pages/Create\";\nimport { View } from \"./pages/View\";\nimport { GlobalThemeProvider } from \"./theme/GlobalTheme\";\nimport { NotesProvider } from \"./context/NotesContext\";\nimport { Layout } from \"./components/Layout\";\nfunction App() {\n  return (\n    <NotesProvider>\n      <GlobalThemeProvider>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\">\n                <View />\n              </Route>\n              <Route path=\"/create\">\n                <Create />\n              </Route>\n            </Switch>\n          </Layout>\n        </HashRouter>\n      </GlobalThemeProvider>\n    </NotesProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./global.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}