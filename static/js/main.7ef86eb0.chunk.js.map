{"version":3,"sources":["context/NotesDB.ts","context/NotesContext.tsx","pages/Create.tsx","components/DeleteConfirmationDialog.tsx","components/NoNotesBanner.tsx","components/NoteCard.tsx","pages/View.tsx","theme/global.tsx","components/NavBar.tsx","components/SideBar.tsx","components/Layout.tsx","App.tsx","index.tsx"],"names":["notesRepository","databaseName","notes","version","stores","table","Dexie","defaultStore","saveNote","newNote","a","Promise","deleteNote","id","NotesContext","React","createContext","NotesProvider","children","useState","setNotes","syncWithDb","toArray","latestNotes","useEffect","open","catch","error","console","message","close","store","add","v4","delete","String","Provider","value","useStyles","makeStyles","field","marginBottom","display","Create","classes","history","useHistory","title","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","useContext","noValidate","autoComplete","onSubmit","e","preventDefault","push","Card","CardHeader","CardContent","TextField","className","onChange","target","label","variant","fullWidth","required","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","color","CardActions","Button","type","endIcon","deleteBtn","red","DeleteConfirmationDialog","deleteConfirmation","closeDeleteConfirmation","handleConfirmDelete","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","useStyle","theme","notesGrid","marginLeft","spacing","width","notesColumnGrid","paddingLeft","backgroundClip","divSpaced","noNotesContainer","height","flexDirection","justifyContent","alignItems","NoNotesBanner","Container","Typography","gutterBottom","createStyles","expand","transform","margin","transition","transitions","create","duration","shortest","expandOpen","content","minHeight","avatar","backgroundColor","yellow","green","pink","blue","NoteCard","note","handleDelete","expanded","setExpanded","Avatar","toUpperCase","action","IconButton","DeleteOutlined","subheader","component","length","substr","disableSpacing","clsx","prev","aria-expanded","aria-label","ExpandMore","Collapse","in","timeout","unmountOnExit","paragraph","View","setDeleteConfirmation","deletingNoteId","setDeletingNoteId","breakpointCols","default","1100","700","columnClassName","map","globalTheme","createMuiTheme","typography","htmlFontSize","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","appBar","date","NavBar","AppBar","position","elevation","Toolbar","format","Date","drawer","drawerPaper","active","background","padding","SideBar","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","Drawer","paper","anchor","List","item","ListItem","pathname","ListItemIcon","ListItemText","primary","page","root","toolbar","mixins","Layout","App","ThemeProvider","basename","process","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ef86eb0.chunk.js","sourcesContent":["import Dexie from \"dexie\";\n\nclass NotesDB extends Dexie {\n  notes: Dexie.Table<INote, string>;\n\n  constructor(databaseName: string) {\n    super(databaseName);\n    this.version(1).stores({\n      notes: \"++id,title,details,category\",\n    });\n\n    this.notes = this.table(\"notes\");\n  }\n}\n\nexport const notesRepository = new NotesDB(\"todoDatabase\");\n","import React, { FC, useEffect, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { notesRepository } from \"./NotesDB\";\n\nconst defaultStore: NotesContextType = {\n  notes: [],\n  saveNote: async (newNote: ICreateNote) => new Promise(() => {}),\n  deleteNote: async (id: string) => new Promise(() => {}),\n};\n\nexport const NotesContext = React.createContext(defaultStore);\n\nexport const NotesProvider: FC = ({ children }): React.ReactElement => {\n  const [notes, setNotes] = useState<INote[]>([]);\n\n  async function syncWithDb() {\n    const latestNotes = await notesRepository.notes.toArray();\n    setNotes(latestNotes);\n  }\n\n  useEffect(() => {\n    notesRepository.open().catch((error: Error) => {\n      console.error(`Open failed: ${error.message}`);\n    });\n    syncWithDb();\n    return () => {\n      notesRepository.close();\n    };\n  }, []);\n\n  const store: NotesContextType = {\n    notes,\n    saveNote: async (newNote: ICreateNote) => {\n      await notesRepository.notes.add({ ...newNote, id: v4() });\n      syncWithDb();\n    },\n    deleteNote: async (id: string) => {\n      notesRepository.notes.delete(String(id));\n      syncWithDb();\n    },\n  };\n\n  return (\n    <NotesContext.Provider value={store}>{children}</NotesContext.Provider>\n  );\n};\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { FormEvent, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { NotesContext } from \"../context/NotesContext\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginBottom: 20,\n    display: \"block\",\n  },\n});\n\nexport const Create = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState<CategoryType>(\"todo\");\n\n  const { saveNote } = useContext(NotesContext) as NotesContextType;\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n    if (title && details) {\n      saveNote({ title, details, category });\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Card>\n        <CardHeader title=\"Create a Note\" />\n        <CardContent>\n          <TextField\n            className={classes.field}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Note Title\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            error={titleError}\n          />\n          <TextField\n            className={classes.field}\n            onChange={(e) => setDetails(e.target.value)}\n            label=\"Details\"\n            variant=\"outlined\"\n            multiline\n            rows={4}\n            fullWidth\n            required\n            error={detailsError}\n          />\n          <FormControl className={classes.field}>\n            <FormLabel>Note Category</FormLabel>\n            <RadioGroup\n              value={category}\n              onChange={(e) => setCategory(e.target.value as CategoryType)}\n            >\n              <FormControlLabel\n                value=\"personal\"\n                control={<Radio color=\"primary\" />}\n                label=\"Personal\"\n              />\n              <FormControlLabel\n                value=\"todo\"\n                control={<Radio color=\"primary\" />}\n                label=\"Todo\"\n              />\n              <FormControlLabel\n                value=\"reminders\"\n                control={<Radio color=\"primary\" />}\n                label=\"Reminder\"\n              />\n              <FormControlLabel\n                value=\"work\"\n                control={<Radio color=\"primary\" />}\n                label=\"Work\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </CardContent>\n\n        <CardActions>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            endIcon={<KeyboardArrowRightIcon />}\n          >\n            Submit\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { red } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React, { FC } from \"react\";\ninterface DeleteConfirmationDialogProps {\n  deleteConfirmation: boolean;\n  closeDeleteConfirmation: () => void;\n  handleConfirmDelete: () => void;\n}\n\nconst useStyles = makeStyles({\n  deleteBtn: {\n    color: red[600],\n  },\n});\n\nexport const DeleteConfirmationDialog: FC<DeleteConfirmationDialogProps> = ({\n  deleteConfirmation,\n  closeDeleteConfirmation,\n  handleConfirmDelete,\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog open={deleteConfirmation} onClose={closeDeleteConfirmation}>\n      <DialogTitle>{\"Delete confirmation\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure want to delete this note?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeDeleteConfirmation} color=\"default\" autoFocus>\n          Cancel\n        </Button>\n        <Button onClick={handleConfirmDelete} className={classes.deleteBtn}>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport { Button, Container, makeStyles, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\n\nconst useStyle = makeStyles((theme) => {\n  return {\n    notesGrid: {\n      display: \"flex\",\n      marginLeft: -theme.spacing(2),\n      width: \"auto\",\n    },\n    notesColumnGrid: {\n      paddingLeft: theme.spacing(2),\n      backgroundClip: \"padding-box\",\n    },\n    divSpaced: {\n      marginBottom: theme.spacing(2),\n    },\n    noNotesContainer: {\n      height: \"94vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  };\n});\nexport const NoNotesBanner = () => {\n  const classes = useStyle();\n\n  const history = useHistory();\n  return (\n    <Container className={classes.noNotesContainer}>\n      <Typography variant=\"h5\" gutterBottom>\n        There is no notes here.\n      </Typography>\n      <Button variant=\"outlined\" onClick={() => history.push(\"/create\")}>\n        Create a new note\n      </Button>\n    </Container>\n  );\n};\n","import {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Collapse,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { blue, green, pink, red, yellow } from \"@material-ui/core/colors\";\nimport { DeleteOutlined, ExpandMore } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { FC, useState } from \"react\";\n\ninterface NoteCardProps {\n  note: INote;\n  handleDelete: () => void;\n}\nconst useStyles = makeStyles<Theme, { category: CategoryType }>(\n  (theme: Theme) =>\n    createStyles({\n      expand: {\n        transform: \"rotate(0deg)\",\n        margin: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      expandOpen: {\n        transform: \"rotate(180deg)\",\n      },\n      content: {\n        minHeight: theme.spacing(2),\n      },\n      deleteBtn: {\n        color: red[400],\n      },\n      avatar: {\n        backgroundColor: ({ category }) => {\n          if (category === \"work\") {\n            return yellow[400];\n          }\n          if (category === \"personal\") {\n            return green[300];\n          }\n          if (category === \"todo\") {\n            return pink[300];\n          }\n          return blue[300];\n        },\n      },\n    })\n);\n\nexport const NoteCard: FC<NoteCardProps> = ({ note, handleDelete }) => {\n  const classes = useStyles(note);\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            <IconButton\n              className={classes.deleteBtn}\n              onClick={() => handleDelete()}\n            >\n              <DeleteOutlined />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent className={classes.content}>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {note.details.length > 30\n              ? `${note.details.substr(0, 30)}...`\n              : note.details}\n          </Typography>\n        </CardContent>\n        {note.details.length > 30 && (\n          <>\n            <CardActions disableSpacing>\n              <IconButton\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n              >\n                <ExpandMore />\n              </IconButton>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                <Typography paragraph variant=\"body2\">\n                  {note.details}\n                </Typography>\n              </CardContent>\n            </Collapse>\n          </>\n        )}\n      </Card>\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport { DeleteConfirmationDialog } from \"../components/DeleteConfirmationDialog\";\nimport { NoNotesBanner } from \"../components/NoNotesBanner\";\nimport { NoteCard } from \"../components/NoteCard\";\nimport { NotesContext } from \"../context/NotesContext\";\n\nconst useStyle = makeStyles((theme) => {\n  return {\n    notesGrid: {\n      display: \"flex\",\n      marginLeft: -theme.spacing(2),\n      width: \"auto\",\n    },\n    notesColumnGrid: {\n      paddingLeft: theme.spacing(2),\n      backgroundClip: \"padding-box\",\n    },\n    divSpaced: {\n      marginBottom: theme.spacing(2),\n    },\n  };\n});\n\nexport const View = () => {\n  const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n  const [deletingNoteId, setDeletingNoteId] = useState(\"\");\n\n  const { notes, deleteNote } = useContext(NotesContext) as NotesContextType;\n  const classes = useStyle();\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  };\n\n  const openDeleteConfirmation = (id: string) => {\n    setDeleteConfirmation(true);\n    setDeletingNoteId(id);\n  };\n  const handleConfirmDelete = () => {\n    setDeleteConfirmation(false);\n    deleteNote(deletingNoteId);\n    setDeletingNoteId(\"\");\n  };\n\n  return (\n    <>\n      {notes.length > 0 ? (\n        <>\n          <Masonry\n            breakpointCols={breakpoints}\n            className={classes.notesGrid}\n            columnClassName={classes.notesColumnGrid}\n          >\n            {notes.map((note) => (\n              <div key={note.id} className={classes.divSpaced}>\n                <NoteCard\n                  note={note}\n                  handleDelete={() => openDeleteConfirmation(note.id)}\n                />\n              </div>\n            ))}\n          </Masonry>\n          <DeleteConfirmationDialog\n            deleteConfirmation={deleteConfirmation}\n            closeDeleteConfirmation={() => setDeleteConfirmation(false)}\n            handleConfirmDelete={handleConfirmDelete}\n          />\n        </>\n      ) : (\n        <NoNotesBanner />\n      )}\n    </>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\nexport const globalTheme = createMuiTheme({\n  typography: {\n    htmlFontSize: 16,\n    fontFamily: '\"Roboto Mono\", monospace',\n    fontSize: 14,\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n    h1: {\n      fontFamily: '\"Roboto Slab\", serif',\n    },\n    h2: {\n      fontFamily: '\"Roboto Slab\", serif',\n    },\n    h3: {\n      fontFamily: '\"Roboto Slab\", serif',\n    },\n    h4: {\n      fontFamily: '\"Roboto Slab\", serif',\n    },\n    h5: {\n      fontFamily: '\"Roboto Slab\", serif',\n    },\n    h6: {\n      fontFamily: '\"Roboto Slab\", serif',\n    },\n    subtitle1: {\n      fontFamily: '\"Roboto Mono\", monospace',\n    },\n    subtitle2: {\n      fontFamily: '\"Roboto Mono\", monospace',\n    },\n    body1: {\n      fontFamily: '\"Roboto Mono\", monospace',\n    },\n    body2: {\n      fontFamily: '\"Roboto Mono\", monospace',\n    },\n    button: {\n      fontFamily: '\"Roboto Mono\", monospace',\n    },\n    caption: {\n      fontFamily: '\"Roboto Mono\", monospace',\n    },\n    overline: {\n      fontFamily: '\"Roboto Mono\", monospace',\n    },\n  },\n});\n","import { makeStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { format } from \"date-fns\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles({\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  date: {\n    marginLeft: \"auto\",\n  },\n});\n\nexport const NavBar = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={classes.appBar}\n      elevation={0}\n      color=\"primary\"\n    >\n      <Toolbar>\n        <Typography className={classes.date}>\n          Today is the {format(new Date(), \"do MMMM Y\")}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n  };\n});\n\nexport const SideBar = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: \"/create\",\n    },\n  ];\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{ paper: classes.drawerPaper }}\n      anchor=\"left\"\n    >\n      <div>\n        <Typography variant=\"h5\" className={classes.title}>\n          InMemory Notes\n        </Typography>\n      </div>\n      <List>\n        {menuItems.map((item) => (\n          <ListItem\n            button\n            key={item.text}\n            onClick={() => history.push(item.path)}\n            className={location.pathname === item.path ? classes.active : \"\"}\n          >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { FC } from \"react\";\nimport { NavBar } from \"./NavBar\";\nimport { SideBar } from \"./SideBar\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n      minHeight: \"92vh\",\n      padding: theme.spacing(3),\n    },\n    root: {\n      display: \"flex\",\n    },\n    toolbar: theme.mixins.toolbar,\n  };\n});\n\nexport const Layout: FC = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <SideBar />\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { Create } from \"./pages/Create\";\nimport { View } from \"./pages/View\";\nimport { globalTheme } from \"./theme/global\";\nimport { NotesProvider } from \"./context/NotesContext\";\nimport { Layout } from \"./components/Layout\";\nfunction App() {\n  return (\n    <NotesProvider>\n      <ThemeProvider theme={globalTheme}>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\">\n                <View />\n              </Route>\n              <Route path=\"/create\">\n                <Create />\n              </Route>\n            </Switch>\n          </Layout>\n        </HashRouter>\n      </ThemeProvider>\n    </NotesProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./global.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}